public List<Integer> distanceK(TreeNode root, TreeNode target, int K) {
    List<Integer> res = new LinkedList<>();

    if (root.val == target.val) {
        return distanceKBFS();
    }


    List<TreeNode> waitList = new ArrayList<>();

    if (target.val < root.val) {

    }

}

private List<Integer> distanceKBFS(TreeNode root, int K) {
    List<Integer> res = new LinkedList<>();
    Deque<TreeNode> dq = new ArrayDeque<>();

    dq.addLast(root);
    while (K != 0 && dq.size() != 0) {
        for
    }


}